<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">

<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<title>Workraft</title>
	<script src="/javascripts/prototype.js" type="text/javascript" charset="utf-8"></script>
	<link rel="stylesheet" href="/stylesheets/style.css" type="text/css" media="screen" title="no title" charset="utf-8">
</head>
<body>
	
	<script type="text/javascript" charset="utf-8">
		var Workraft = {
			id: '<%= @game.id %>',
			gold: 200,
			tiles: new Hash,
			tasks: new Hash,
			frame: 0,
			letters: ['A','B','C','D','E','F','G','H','I','J','K'],
			selected: null,
			// codes to highlight, like 'GH' for Town Hall and Grass
			highlighting: '',
			clear_highlights: function() {
				$$('.tile').each(function(tile){tile.innerHTML = "";})
			},
			peasants: new Hash,
			initialize: function() {
				<% width = 0 %>
				<% count = 0 %>
				<% map_height = 0 %>
				<% @tiles.each do |tile,index| %>
					<% y = (count/@game.width).to_i %>
					<% x = count-(@game.width*y) %>
					new Tile('<%= tile[:type]%>',<%= x %>,<%= y %>,'<%= tile[:image] %>')
					<% count += 1 %>
					<% map_height = y+1 %>
				<% end %>
			},
			log: function(msg) {
				if (console && console.log) {
					console.log(msg)
				}
			},
			keypress: function(event) {
				// if (e.keyCode)
			},
			draw: function() {
				Workraft.frame += 1
				Workraft.peasants.values().each(function(peasant){
					peasant.draw()
				})
			},
			// decode grid codes into number tuple (array)
			decode: function(code) {
				var letters = 'ABCDEFGHIJK'
				// check if the tile is a neighbor
				var x = letters.search(code[0])
				var y = code[1]
				return [x,y]
			},
			update: function() {
				////////////////////////////////////////////////////////
				// Receive completed commands, if any:
				////////////////////////////////////////////////////////
				new Ajax.Request('/game/update/'+Workraft.id,{
					onSuccess: function(response) {
						response = response.responseText.evalJSON()
						response.each(function(task){
							task = task.task
							// must identify which peasant it's for
							var peasant_id = Workraft.tasks.get(task.id)
							if (peasant_id) {
								Workraft.tasks.unset(task.id)
								Workraft.log('fulfilled task: '+task.id)
								Workraft.peasants.get(peasant_id).do_task(task)
							}
						})
					}
				})
			},
			clear: function() {
				Workraft.highlighting = ''
				$('tasks').innerHTML = ""
				$('message').innerHTML = ""
				$('portrait').innerHTML = ""
			},
			task: 'none',
			// click: function(type,x,y) {
			// 	Workraft.clear()
			// 	Workraft.clear_highlights()
			// 	var tile = Workraft.tiles.get(x+','+y)
			// 	tile.click()
			// }
		}
		Event.observe(document,'dom:loaded',Workraft.initialize)
		var Tile = Class.create({
			initialize: function(type,x,y,image) {
				this.x = x
				this.y = y
				this.type = type
				this.big = (this.type == "C" || this.type == "H")
				if (this.big) this.bigclass = " big"
				else this.bigclass = ''
				Workraft.tiles.set(x+','+y,this)
				if (type != 'X') {
					$('map').insert("<a class='tile "+this.bigclass+"' style='background:url(\"/tiles/"+image+"\");left:"+(x*64)+"px;top:"+(y*64)+"px;' id='"+x+'-'+y+"' ></a>")
					$(this.x+'-'+this.y).observe('mouseover',this.hover.bind(this))
					$(this.x+'-'+this.y).observe('mouseup',this.click.bind(this))
				}
			},
			element: function() {
				return $(this.x+'-'+this.y)
			},
			click: function() {
				Workraft.clear()
				Workraft.clear_highlights()
				////////////////////////////////////////////////////////
				// deal with commands, like build, harvest, move, attack
				////////////////////////////////////////////////////////
				var command = Workraft.task.split(':')[1]
				if (command != 'none') {
					Workraft.log(command)
					var peasant_id = Workraft.task.split(':')[0]
					var code = Workraft.letters[Workraft.task.split(':')[2].split(',')[0]]+Workraft.task.split(':')[2].split(',')[1]+':'+Workraft.letters[this.x]+this.y
					new Ajax.Request('/task/create',{
						method:'post',
						parameters: {
							game_id: Workraft.id,
							name: command,
							specs: code,
							peasant_id: peasant_id
						},
						onSuccess: function(response) {
							Workraft.log('Telling peasant to '+command+'. (task id:'+response.responseText+', peasant_id:'+peasant_id+')')
							// Record peasant id and task id for retrieval later:
							Workraft.tasks.set(response.responseText,peasant_id)
						}
					})
					Workraft.task = 'none'
				}
				if (command == 'none') {
					if (this.type == 'C') {
						Workraft.log('castle')
					} else if (this.type == 'H') {
						Workraft.log('town hall')
					} else if (this.type == 'F') {
						Workraft.log('farm')
					}
				}
			},
			hover: function() {
				Workraft.clear_highlights()
				if (Workraft.highlighting.match(this.type)) {
					if (this.big) this.element().insert("<img class'highlight' src='/tiles/highlight-big-square-green.gif'/>")
					else this.element().insert("<img class'highlight' src='/tiles/highlight-square-green.gif'/>")
				}
			}
		})

	</script>
	
	<div id="header">
		<h1>Workraft</h1>
		<p>
			Welcome to Workraft, my lord, where you command...
		</p>
	</div>

	<div id="game">
		<div id="map"></div>

		<div id="menu" style="position:absolute;top:<%= map_height*64 %>px;width:<%= (64*@game.width)-21 %>px;">
			<div id="info">
				
			</div>
			<div id="selection">
				<div id="portrait"></div>
				<div id="tasks"></div>
			</div>
			<div id="message"></div>
		</div>

		<div id="peasants"></div>
	</div>

	<script type="text/javascript" charset="utf-8">
		Event.observe(document, 'keypress', Workraft.keypress)
		// Event.observe(document, 'keyup', Events.keyup)
		var Peasant = Class.create({
			initialize: function(x,y) {
				this.x = x*64
				this.y = y*64
				this.id = 'peasant-'+parseInt((new Date).getTime())
				$('peasants').insert('<a class="peasant" href="" id="'+this.id+'"></a>')
				$(this.id).href = "javascript:Workraft.peasants.get('"+this.id+"').click()"
				Workraft.peasants.set(this.id,this)
			},
			mode: 'walking',
			set: 0,
			// various states of animation:
			steps: [0,-48,-96,-144,-192,-144,-96,-48],
			// what frame of the animation we're in
			step: 0,
			task: 'none',
			x: 64,
			y: 64,
			draw: function() {
				if (this.mode != 'standing') {
					if (this.mode == 'walking') this.set = 0
					if (this.mode == 'chopping') this.set = -48
					$(this.id).style.backgroundPosition = this.steps[this.step]+"px "+this.set+"px"
					$(this.id).style.top = this.y+'px'
					$(this.id).style.left = this.x+'px'
					this.step += 1
					if (this.step >= this.steps.length) this.step = 0
				} else {
					$(this.id).style.backgroundPosition = "0px "+this.set+"px"
				}
				
				if (this.task == 'none') {
					
				} else {
					// walk to the task site
					if (this.path.length > 0) {
						
						var tile = Workraft.decode(this.path.first())
						var speed = 2
						if (this.x/64 > tile[0]) {
							this.x -= speed
							this.direction  = 3
						} else if (this.x/64 < tile[0]) {
							this.x += speed
							this.direction  = 1
						}
						if (this.y/64 > tile[1]) {
							this.y -= speed
							this.direction  = 0
						} else if (this.y/64 < tile[1]) {
							this.y += speed
							this.direction  = 2
						}
						if (this.x/64 == tile[0] && this.y/64 == tile[1]) {
							// done with that step
							this.path.splice(0,1)
						}
						
					} else if (this.path.length == 0) {
						// we've arrived, let's get working:
						Workraft.log(this.task+'ing!!!')
						// switch mode
						
					}
				}
			},
			click: function() {
				Workraft.clear()
				this.tasks.each(function(task){
					$('tasks').insert(this.task_prefix+this.id+task)
				},this)
				$('portrait').innerHTML = "<h3>Peasant</h3>"
			},
			do_task: function(task) {
				Workraft.log('yes my lord!!')
				
				// here we have to interpret the path that the task describes, 
				// and walk it, with correct sprite turns and 'walking' animation
				var path = task.route.split(',')
				// check if the first location is the current one
				// if ()
				this.path = path
				this.task = task.name
				Workraft.log(this.task+'ing path: '+this.path)
			},
			task_prefix: "<a href='javascript:Workraft.peasants.get(\"",
			tasks: ["\").build()' class='task'>Build farm</a>",
					"\").harvest()' class='task'>Harvest wood</a>",
					"\").move()' class='task'>Move</a>",
					"\").attack()' class='task'>Attack</a>",
					"\").cancel()' class='task'>cancel</a>"],
			build: function() {
				Workraft.clear_highlights()
				$('message').innerHTML = 'Select a place to build.'
				Workraft.task = this.id+':'+'build:'+(this.x/64)+','+(this.y/64)
				Workraft.selected = this
				Workraft.highlighting = 'G'
			},
			harvest: function() {
				Workraft.clear_highlights()
				$('message').innerHTML = 'Select a place to harvest trees.'
				Workraft.task = this.id+':'+'harvest:'+(this.x/64)+','+(this.y/64)
				Workraft.selected = this
				Workraft.highlighting = 'T'
			},
			move: function() {
				Workraft.clear_highlights()
				$('message').innerHTML = 'Select a place to move to.'
				Workraft.task = this.id+':'+'move:'+(this.x/64)+','+(this.y/64)
				Workraft.selected = this
				Workraft.highlighting = 'G'
			},
			attack: function() {
				Workraft.clear_highlights()
				$('message').innerHTML = 'Select a target.'
				Workraft.task = this.id+':'+'attack:'+(this.x/64)+','+(this.y/64)
				Workraft.selected = this
				Workraft.highlighting = 'HFEC'
			},
			cancel: function() {
				Workraft.clear_highlights()
				Workraft.clear()
				Workraft.selected = null
			}
		})
		
		// just add dummy peasants for testing:
		new Peasant(0,1)
		new Peasant(2,2)

		// draw every frame
		new PeriodicalExecuter(Workraft.draw,0.1)
		// check if tasks have been completed
		new PeriodicalExecuter(Workraft.update,2)
	</script>
	
</body>
</html>
